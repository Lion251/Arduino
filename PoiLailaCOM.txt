
C:\Users\Henk\AppData\Local\Temp\arduino_build_417811/PoiLaila.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
   0:	0f c1       	rjmp	.+542    	; 0x220 <__ctors_end>
   2:	29 c1       	rjmp	.+594    	; 0x256 <__bad_interrupt>
   4:	28 c1       	rjmp	.+592    	; 0x256 <__bad_interrupt>
   6:	27 c1       	rjmp	.+590    	; 0x256 <__bad_interrupt>
   8:	4c c2       	rjmp	.+1176   	; 0x4a2 <__vector_4>
   a:	f9 c1       	rjmp	.+1010   	; 0x3fe <__vector_5>
   c:	24 c1       	rjmp	.+584    	; 0x256 <__bad_interrupt>
   e:	23 c1       	rjmp	.+582    	; 0x256 <__bad_interrupt>
  10:	22 c1       	rjmp	.+580    	; 0x256 <__bad_interrupt>
  12:	21 c1       	rjmp	.+578    	; 0x256 <__bad_interrupt>
  14:	20 c1       	rjmp	.+576    	; 0x256 <__bad_interrupt>
  16:	1f c1       	rjmp	.+574    	; 0x256 <__bad_interrupt>
  18:	1e c1       	rjmp	.+572    	; 0x256 <__bad_interrupt>
  1a:	1d c1       	rjmp	.+570    	; 0x256 <__bad_interrupt>
  1c:	1c c1       	rjmp	.+568    	; 0x256 <__bad_interrupt>

0000001e <__trampolines_end>:
  1e:	00 00       	nop
  20:	40 00       	.word	0x0040	; ????
  22:	00 01       	movw	r0, r0
  24:	06 01       	movw	r0, r12
  26:	0b 01       	movw	r0, r22
  28:	11 01       	movw	r2, r2
  2a:	17 01       	movw	r2, r14
  2c:	1d 01       	movw	r2, r26
  2e:	24 01       	movw	r4, r8
  30:	2a 01       	movw	r4, r20
  32:	31 01       	movw	r6, r2
  34:	37 01       	movw	r6, r14
  36:	3e 01       	movw	r6, r28
  38:	45 01       	movw	r8, r10
  3a:	4c 01       	movw	r8, r24
  3c:	54 01       	movw	r10, r8
  3e:	5b 01       	movw	r10, r22
  40:	63 01       	movw	r12, r6
  42:	6a 01       	movw	r12, r20
  44:	72 01       	movw	r14, r4
  46:	7b 01       	movw	r14, r22
  48:	83 01       	movw	r16, r6
  4a:	8b 01       	movw	r16, r22
  4c:	94 01       	movw	r18, r8
  4e:	9d 01       	movw	r18, r26
  50:	a6 01       	movw	r20, r12
  52:	af 01       	movw	r20, r30
  54:	b9 01       	movw	r22, r18
  56:	c2 01       	movw	r24, r4
  58:	cc 01       	movw	r24, r24
  5a:	d6 01       	movw	r26, r12
  5c:	e1 01       	movw	r28, r2
  5e:	eb 01       	movw	r28, r22
  60:	f6 01       	movw	r30, r12
  62:	01 02       	muls	r16, r17
  64:	0c 02       	muls	r16, r28
  66:	18 02       	muls	r17, r24
  68:	24 02       	muls	r18, r20
  6a:	30 02       	muls	r19, r16
  6c:	3c 02       	muls	r19, r28
  6e:	49 02       	muls	r20, r25
  70:	55 02       	muls	r21, r21
  72:	63 02       	muls	r22, r19
  74:	70 02       	muls	r23, r16
  76:	7e 02       	muls	r23, r30
  78:	8c 02       	muls	r24, r28
  7a:	9a 02       	muls	r25, r26
  7c:	a9 02       	muls	r26, r25
  7e:	b8 02       	muls	r27, r24
  80:	c7 02       	muls	r28, r23
  82:	d7 02       	muls	r29, r23
  84:	e6 02       	muls	r30, r22
  86:	f7 02       	muls	r31, r23
  88:	07 03       	mulsu	r16, r23
  8a:	18 03       	fmul	r17, r16
  8c:	2a 03       	fmul	r18, r18
  8e:	3c 03       	fmul	r19, r20
  90:	4e 03       	fmul	r20, r22
  92:	60 03       	mulsu	r22, r16
  94:	73 03       	mulsu	r23, r19
  96:	87 03       	fmuls	r16, r23
  98:	9b 03       	fmulsu	r17, r19
  9a:	af 03       	fmulsu	r18, r23
  9c:	c4 03       	fmuls	r20, r20
  9e:	d9 03       	fmulsu	r21, r17
  a0:	ee 03       	fmulsu	r22, r22
  a2:	05 04       	cpc	r0, r5
  a4:	1b 04       	cpc	r1, r11
  a6:	32 04       	cpc	r3, r2
  a8:	4a 04       	cpc	r4, r10
  aa:	62 04       	cpc	r6, r2
  ac:	7b 04       	cpc	r7, r11
  ae:	94 04       	cpc	r9, r4
  b0:	ae 04       	cpc	r10, r14
  b2:	c8 04       	cpc	r12, r8
  b4:	e3 04       	cpc	r14, r3
  b6:	fe 04       	cpc	r15, r14
  b8:	1a 05       	cpc	r17, r10
  ba:	37 05       	cpc	r19, r7
  bc:	54 05       	cpc	r21, r4
  be:	72 05       	cpc	r23, r2
  c0:	91 05       	cpc	r25, r1
  c2:	b0 05       	cpc	r27, r0
  c4:	d0 05       	cpc	r29, r0
  c6:	f1 05       	cpc	r31, r1
  c8:	12 06       	cpc	r1, r18
  ca:	34 06       	cpc	r3, r20
  cc:	57 06       	cpc	r5, r23
  ce:	7b 06       	cpc	r7, r27
  d0:	9f 06       	cpc	r9, r31
  d2:	c5 06       	cpc	r12, r21
  d4:	eb 06       	cpc	r14, r27
  d6:	12 07       	cpc	r17, r18
  d8:	39 07       	cpc	r19, r25
  da:	62 07       	cpc	r22, r18
  dc:	8c 07       	cpc	r24, r28
  de:	b6 07       	cpc	r27, r22
  e0:	e1 07       	cpc	r30, r17
  e2:	0e 08       	sbc	r0, r14
  e4:	3b 08       	sbc	r3, r11
  e6:	69 08       	sbc	r6, r9
  e8:	99 08       	sbc	r9, r9
  ea:	c9 08       	sbc	r12, r9
  ec:	fa 08       	sbc	r15, r10
  ee:	2d 09       	sbc	r18, r13
  f0:	60 09       	sbc	r22, r0
  f2:	95 09       	sbc	r25, r5
  f4:	cb 09       	sbc	r28, r11
  f6:	02 0a       	sbc	r0, r18
  f8:	3a 0a       	sbc	r3, r26
  fa:	74 0a       	sbc	r7, r20
  fc:	af 0a       	sbc	r10, r31
  fe:	eb 0a       	sbc	r14, r27
 100:	28 0b       	sbc	r18, r24
 102:	67 0b       	sbc	r22, r23
 104:	a7 0b       	sbc	r26, r23
 106:	e9 0b       	sbc	r30, r25
 108:	2c 0c       	add	r2, r12
 10a:	70 0c       	add	r7, r0
 10c:	b6 0c       	add	r11, r6
 10e:	fd 0c       	add	r15, r13
 110:	47 0d       	add	r20, r7
 112:	91 0d       	add	r25, r1
 114:	dd 0d       	add	r29, r13
 116:	2b 0e       	add	r2, r27
 118:	7b 0e       	add	r7, r27
 11a:	cd 0e       	add	r12, r29
 11c:	20 0f       	add	r18, r16
 11e:	75 0f       	add	r23, r21
 120:	cc 0f       	add	r28, r28
 122:	25 10       	cpse	r2, r5
 124:	7f 10       	cpse	r7, r15
 126:	dc 10       	cpse	r13, r12
 128:	3b 11       	cpse	r19, r11
 12a:	9c 11       	cpse	r25, r12
 12c:	ff 11       	cpse	r31, r15
 12e:	64 12       	cpse	r6, r20
 130:	cc 12       	cpse	r12, r28
 132:	35 13       	cpse	r19, r21
 134:	a1 13       	cpse	r26, r17
 136:	10 14       	cp	r1, r0
 138:	81 14       	cp	r8, r1
 13a:	f4 14       	cp	r15, r4
 13c:	6a 15       	cp	r22, r10
 13e:	e2 15       	cp	r30, r2
 140:	5d 16       	cp	r5, r29
 142:	db 16       	cp	r13, r27
 144:	5b 17       	cp	r21, r27
 146:	df 17       	cp	r29, r31
 148:	65 18       	sub	r6, r5
 14a:	ee 18       	sub	r14, r14
 14c:	7b 19       	sub	r23, r11
 14e:	0a 1a       	sub	r0, r26
 150:	9c 1a       	sub	r9, r28
 152:	32 1b       	sub	r19, r18
 154:	cb 1b       	sub	r28, r27
 156:	67 1c       	adc	r6, r7
 158:	07 1d       	adc	r16, r7
 15a:	aa 1d       	adc	r26, r10
 15c:	51 1e       	adc	r5, r17
 15e:	fb 1e       	adc	r15, r27
 160:	aa 1f       	adc	r26, r26
 162:	5c 20       	and	r5, r12
 164:	12 21       	and	r17, r2
 166:	cc 21       	and	r28, r12
 168:	8a 22       	and	r8, r26
 16a:	4c 23       	and	r20, r28
 16c:	12 24       	eor	r1, r2
 16e:	ad 25       	eor	r26, r13
 170:	81 26       	eor	r8, r17
 172:	59 27       	eor	r21, r25
 174:	36 28       	or	r3, r6
 176:	19 29       	or	r17, r9
 178:	00 2a       	or	r0, r16
 17a:	ec 2a       	or	r14, r28
 17c:	dd 2b       	or	r29, r29
 17e:	d4 2c       	mov	r13, r4
 180:	d0 2d       	mov	r29, r0
 182:	d2 2e       	mov	r13, r18
 184:	d9 2f       	mov	r29, r25
 186:	e6 30       	cpi	r30, 0x06	; 6
 188:	f9 31       	cpi	r31, 0x19	; 25
 18a:	12 33       	cpi	r17, 0x32	; 50
 18c:	31 34       	cpi	r19, 0x41	; 65
 18e:	57 35       	cpi	r21, 0x57	; 87
 190:	83 36       	cpi	r24, 0x63	; 99
 192:	b5 37       	cpi	r27, 0x75	; 117
 194:	ef 38       	cpi	r30, 0x8F	; 143
 196:	2f 3a       	cpi	r18, 0xAF	; 175
 198:	76 3b       	cpi	r23, 0xB6	; 182
 19a:	c4 3c       	cpi	r28, 0xC4	; 196
 19c:	1a 3e       	cpi	r17, 0xEA	; 234
 19e:	77 3f       	cpi	r23, 0xF7	; 247
 1a0:	dc 40       	sbci	r29, 0x0C	; 12
 1a2:	49 42       	sbci	r20, 0x29	; 41
 1a4:	be 43       	sbci	r27, 0x3E	; 62
 1a6:	3b 45       	sbci	r19, 0x5B	; 91
 1a8:	c0 46       	sbci	r28, 0x60	; 96
 1aa:	4e 48       	sbci	r20, 0x8E	; 142
 1ac:	e5 49       	sbci	r30, 0x95	; 149
 1ae:	84 4b       	sbci	r24, 0xB4	; 180
 1b0:	2d 4d       	sbci	r18, 0xDD	; 221
 1b2:	df 4e       	sbci	r29, 0xEF	; 239
 1b4:	9b 50       	subi	r25, 0x0B	; 11
 1b6:	60 52       	subi	r22, 0x20	; 32
 1b8:	2f 54       	subi	r18, 0x4F	; 79
 1ba:	09 56       	subi	r16, 0x69	; 105
 1bc:	ed 57       	subi	r30, 0x7D	; 125
 1be:	db 59       	subi	r29, 0x9B	; 155
 1c0:	d4 5b       	subi	r29, 0xB4	; 180
 1c2:	d9 5d       	subi	r29, 0xD9	; 217
 1c4:	e9 5f       	subi	r30, 0xF9	; 249
 1c6:	04 62       	ori	r16, 0x24	; 36
 1c8:	2b 64       	ori	r18, 0x4B	; 75
 1ca:	5e 66       	ori	r21, 0x6E	; 110
 1cc:	9e 68       	ori	r25, 0x8E	; 142
 1ce:	eb 6a       	ori	r30, 0xAB	; 171
 1d0:	44 6d       	ori	r20, 0xD4	; 212
 1d2:	aa 6f       	ori	r26, 0xFA	; 250
 1d4:	1e 72       	andi	r17, 0x2E	; 46
 1d6:	a0 74       	andi	r26, 0x40	; 64
 1d8:	30 77       	andi	r19, 0x70	; 112
 1da:	ce 79       	andi	r28, 0x9E	; 158
 1dc:	7b 7c       	andi	r23, 0xCB	; 203
 1de:	37 7f       	andi	r19, 0xF7	; 247
 1e0:	03 82       	std	Z+3, r0	; 0x03
 1e2:	de 84       	ldd	r13, Y+14	; 0x0e
 1e4:	c9 87       	std	Y+9, r28	; 0x09
 1e6:	c5 8a       	std	Z+21, r12	; 0x15
 1e8:	d1 8d       	ldd	r29, Z+25	; 0x19
 1ea:	f3 90       	.word	0x90f3	; ????
 1ec:	1e 94 5f 97 	call	0x52ebe	; 0x52ebe <__EEPROM_REGION_LENGTH__+0x42ebe>
 1f0:	b2 9a       	sbi	0x16, 2	; 22
 1f2:	18 9e       	mul	r1, r24
 1f4:	91 a1       	ldd	r25, Z+33	; 0x21
 1f6:	1e a5       	ldd	r17, Y+46	; 0x2e
 1f8:	bf a8       	ldd	r11, Y+55	; 0x37
 1fa:	74 ac       	ldd	r7, Z+60	; 0x3c
 1fc:	3d b0       	in	r3, 0x0d	; 13
 1fe:	1d b4       	in	r1, 0x2d	; 45
 200:	11 b8       	out	0x01, r1	; 1
 202:	1d bc       	out	0x2d, r1	; 45
 204:	3f c0       	rjmp	.+126    	; 0x284 <__stack+0x25>
 206:	78 c4       	rjmp	.+2288   	; 0xaf8 <__data_load_end+0x3c2>
 208:	c9 c8       	rjmp	.-3694   	; 0xfffff39c <__eeprom_end+0xff7ef39c>
 20a:	32 cd       	rjmp	.-1436   	; 0xfffffc70 <__eeprom_end+0xff7efc70>
 20c:	b4 d1       	rcall	.+872    	; 0x576 <delay+0x18>
 20e:	4f d6       	rcall	.+3230   	; 0xeae <__data_load_end+0x778>
 210:	04 db       	rcall	.-2552   	; 0xfffff81a <__eeprom_end+0xff7ef81a>
 212:	d4 df       	rcall	.-88     	; 0x1bc <__SREG__+0x17d>
 214:	bf e4       	ldi	r27, 0x4F	; 79
 216:	c5 e9       	ldi	r28, 0x95	; 149
 218:	e8 ee       	ldi	r30, 0xE8	; 232
 21a:	28 f4       	brcc	.+10     	; 0x226 <__ctors_end+0x6>
 21c:	85 f9       	bld	r24, 5
 21e:	00 ff       	sbrs	r16, 0

00000220 <__ctors_end>:
 220:	11 24       	eor	r1, r1
 222:	1f be       	out	0x3f, r1	; 63
 224:	cf e5       	ldi	r28, 0x5F	; 95
 226:	d2 e0       	ldi	r29, 0x02	; 2
 228:	de bf       	out	0x3e, r29	; 62
 22a:	cd bf       	out	0x3d, r28	; 61

0000022c <__do_copy_data>:
 22c:	10 e0       	ldi	r17, 0x00	; 0
 22e:	a0 e6       	ldi	r26, 0x60	; 96
 230:	b0 e0       	ldi	r27, 0x00	; 0
 232:	ea e1       	ldi	r30, 0x1A	; 26
 234:	f7 e0       	ldi	r31, 0x07	; 7
 236:	02 c0       	rjmp	.+4      	; 0x23c <__do_copy_data+0x10>
 238:	05 90       	lpm	r0, Z+
 23a:	0d 92       	st	X+, r0
 23c:	ac 37       	cpi	r26, 0x7C	; 124
 23e:	b1 07       	cpc	r27, r17
 240:	d9 f7       	brne	.-10     	; 0x238 <__do_copy_data+0xc>

00000242 <__do_clear_bss>:
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	ac e7       	ldi	r26, 0x7C	; 124
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	01 c0       	rjmp	.+2      	; 0x24c <.do_clear_bss_start>

0000024a <.do_clear_bss_loop>:
 24a:	1d 92       	st	X+, r1

0000024c <.do_clear_bss_start>:
 24c:	a0 39       	cpi	r26, 0x90	; 144
 24e:	b2 07       	cpc	r27, r18
 250:	e1 f7       	brne	.-8      	; 0x24a <.do_clear_bss_loop>
 252:	b7 d1       	rcall	.+878    	; 0x5c2 <main>
 254:	60 c2       	rjmp	.+1216   	; 0x716 <_exit>

00000256 <__bad_interrupt>:
 256:	d4 ce       	rjmp	.-600    	; 0x0 <__vectors>

00000258 <_Z6GetExpj>:
}

void loop2(void) {
	static unsigned i;
	HiResPWM(1, GetExp(i++));
	delay(1);
 258:	8f 92       	push	r8
 25a:	9f 92       	push	r9
 25c:	af 92       	push	r10
 25e:	bf 92       	push	r11
 260:	cf 92       	push	r12
 262:	df 92       	push	r13
 264:	ef 92       	push	r14
 266:	ff 92       	push	r15
 268:	cf 93       	push	r28
 26a:	df 93       	push	r29
 26c:	28 2f       	mov	r18, r24
 26e:	49 2f       	mov	r20, r25
 270:	50 e0       	ldi	r21, 0x00	; 0
 272:	fa 01       	movw	r30, r20
 274:	ee 0f       	add	r30, r30
 276:	ff 1f       	adc	r31, r31
 278:	e2 5e       	subi	r30, 0xE2	; 226
 27a:	ff 4f       	sbci	r31, 0xFF	; 255
 27c:	c5 91       	lpm	r28, Z+
 27e:	d4 91       	lpm	r29, Z
 280:	fa 01       	movw	r30, r20
 282:	ee 0f       	add	r30, r30
 284:	ff 1f       	adc	r31, r31
 286:	e0 5e       	subi	r30, 0xE0	; 224
 288:	ff 4f       	sbci	r31, 0xFF	; 255
 28a:	65 91       	lpm	r22, Z+
 28c:	74 91       	lpm	r23, Z
 28e:	6c 1b       	sub	r22, r28
 290:	7d 0b       	sbc	r23, r29
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	50 e0       	ldi	r21, 0x00	; 0
 29c:	bc d1       	rcall	.+888    	; 0x616 <__umulsidi3>
 29e:	49 01       	movw	r8, r18
 2a0:	5a 01       	movw	r10, r20
 2a2:	89 2c       	mov	r8, r9
 2a4:	9a 2c       	mov	r9, r10
 2a6:	ab 2c       	mov	r10, r11
 2a8:	bb 24       	eor	r11, r11
 2aa:	ce 01       	movw	r24, r28
 2ac:	88 0d       	add	r24, r8
 2ae:	99 1d       	adc	r25, r9
 2b0:	df 91       	pop	r29
 2b2:	cf 91       	pop	r28
 2b4:	ff 90       	pop	r15
 2b6:	ef 90       	pop	r14
 2b8:	df 90       	pop	r13
 2ba:	cf 90       	pop	r12
 2bc:	bf 90       	pop	r11
 2be:	af 90       	pop	r10
 2c0:	9f 90       	pop	r9
 2c2:	8f 90       	pop	r8
 2c4:	08 95       	ret

000002c6 <setup>:
 2c6:	18 ba       	out	0x18, r1	; 24
 2c8:	8f e3       	ldi	r24, 0x3F	; 63
 2ca:	84 bb       	out	0x14, r24	; 20
 2cc:	8f e1       	ldi	r24, 0x1F	; 31
 2ce:	87 bb       	out	0x17, r24	; 23
 2d0:	83 ec       	ldi	r24, 0xC3	; 195
 2d2:	8a bd       	out	0x2a, r24	; 42
 2d4:	81 e7       	ldi	r24, 0x71	; 113
 2d6:	80 bf       	out	0x30, r24	; 48
 2d8:	80 e7       	ldi	r24, 0x70	; 112
 2da:	8c bd       	out	0x2c, r24	; 44
 2dc:	8f ef       	ldi	r24, 0xFF	; 255
 2de:	8d bd       	out	0x2d, r24	; 45
 2e0:	89 b7       	in	r24, 0x39	; 57
 2e2:	84 60       	ori	r24, 0x04	; 4
 2e4:	89 bf       	out	0x39, r24	; 57
 2e6:	85 b7       	in	r24, 0x35	; 53
 2e8:	87 7e       	andi	r24, 0xE7	; 231
 2ea:	85 bf       	out	0x35, r24	; 53
 2ec:	85 b7       	in	r24, 0x35	; 53
 2ee:	80 62       	ori	r24, 0x20	; 32
 2f0:	85 bf       	out	0x35, r24	; 53
 2f2:	08 95       	ret

000002f4 <loop>:
}

// 06-15130251 Overbuurvrouw mama
void loop() {
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	cd b7       	in	r28, 0x3d	; 61
 2fa:	de b7       	in	r29, 0x3e	; 62
 2fc:	68 97       	sbiw	r28, 0x18	; 24
 2fe:	0f b6       	in	r0, 0x3f	; 63
 300:	f8 94       	cli
 302:	de bf       	out	0x3e, r29	; 62
 304:	0f be       	out	0x3f, r0	; 63
 306:	cd bf       	out	0x3d, r28	; 61
	unsigned	Val[3]	= { 256, 256, 256 };
 308:	86 e0       	ldi	r24, 0x06	; 6
 30a:	e0 e7       	ldi	r30, 0x70	; 112
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	de 01       	movw	r26, r28
 310:	53 96       	adiw	r26, 0x13	; 19
 312:	01 90       	ld	r0, Z+
 314:	0d 92       	st	X+, r0
 316:	8a 95       	dec	r24
 318:	e1 f7       	brne	.-8      	; 0x312 <loop+0x1e>
	int		dVal[3]	= {  137,  29,  31 };
 31a:	86 e0       	ldi	r24, 0x06	; 6
 31c:	e6 e7       	ldi	r30, 0x76	; 118
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	de 01       	movw	r26, r28
 322:	1d 96       	adiw	r26, 0x0d	; 13
 324:	01 90       	ld	r0, Z+
 326:	0d 92       	st	X+, r0
 328:	8a 95       	dec	r24
 32a:	e1 f7       	brne	.-8      	; 0x324 <loop+0x30>
 32c:	4e 01       	movw	r8, r28
 32e:	69 e1       	ldi	r22, 0x19	; 25
 330:	86 0e       	add	r8, r22
 332:	91 1c       	adc	r9, r1
 334:	ce 01       	movw	r24, r28
 336:	0d 96       	adiw	r24, 0x0d	; 13
 338:	7c 01       	movw	r14, r24
 33a:	8e 01       	movw	r16, r28
 33c:	0d 5e       	subi	r16, 0xED	; 237
 33e:	1f 4f       	sbci	r17, 0xFF	; 255
 340:	fe 01       	movw	r30, r28
 342:	31 96       	adiw	r30, 0x01	; 1
 344:	6f 01       	movw	r12, r30
	HiResPWM(1, GetExp(i++));
	delay(1);
}

// 06-15130251 Overbuurvrouw mama
void loop() {
 346:	5f 01       	movw	r10, r30
	unsigned long	DisplayVal[3];
	byte		i;
	unsigned long	SumVal;

	for (;;) {
		SumVal	= 0;
 348:	41 2c       	mov	r4, r1
 34a:	51 2c       	mov	r5, r1
 34c:	32 01       	movw	r6, r4
		for (i=0; i<3; i++) {
			Val[i]	+= dVal[i];
 34e:	f7 01       	movw	r30, r14
 350:	20 81       	ld	r18, Z
 352:	31 81       	ldd	r19, Z+1	; 0x01
 354:	f8 01       	movw	r30, r16
 356:	80 81       	ld	r24, Z
 358:	91 81       	ldd	r25, Z+1	; 0x01
 35a:	82 0f       	add	r24, r18
 35c:	93 1f       	adc	r25, r19
 35e:	81 93       	st	Z+, r24
 360:	91 93       	st	Z+, r25
 362:	8f 01       	movw	r16, r30
			if (Val[i]<256 || Val[i]>65000) dVal[i]=-dVal[i];
 364:	ac 01       	movw	r20, r24
 366:	5a 95       	dec	r21
 368:	49 3e       	cpi	r20, 0xE9	; 233
 36a:	5c 4f       	sbci	r21, 0xFC	; 252
 36c:	30 f0       	brcs	.+12     	; 0x37a <loop+0x86>
 36e:	31 95       	neg	r19
 370:	21 95       	neg	r18
 372:	31 09       	sbc	r19, r1
 374:	f7 01       	movw	r30, r14
 376:	31 83       	std	Z+1, r19	; 0x01
 378:	20 83       	st	Z, r18
			DisplayVal[i]	= GetExp(Val[i]);
 37a:	6e df       	rcall	.-292    	; 0x258 <_Z6GetExpj>
 37c:	a0 e0       	ldi	r26, 0x00	; 0
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	f5 01       	movw	r30, r10
 382:	81 93       	st	Z+, r24
 384:	91 93       	st	Z+, r25
 386:	a1 93       	st	Z+, r26
 388:	b1 93       	st	Z+, r27
 38a:	5f 01       	movw	r10, r30
			SumVal	+= DisplayVal[i];
 38c:	48 0e       	add	r4, r24
 38e:	59 1e       	adc	r5, r25
 390:	6a 1e       	adc	r6, r26
 392:	7b 1e       	adc	r7, r27
 394:	f2 e0       	ldi	r31, 0x02	; 2
 396:	ef 0e       	add	r14, r31
 398:	f1 1c       	adc	r15, r1
	byte		i;
	unsigned long	SumVal;

	for (;;) {
		SumVal	= 0;
		for (i=0; i<3; i++) {
 39a:	08 15       	cp	r16, r8
 39c:	19 05       	cpc	r17, r9
 39e:	b9 f6       	brne	.-82     	; 0x34e <loop+0x5a>
 3a0:	10 e0       	ldi	r17, 0x00	; 0
			if (Val[i]<256 || Val[i]>65000) dVal[i]=-dVal[i];
			DisplayVal[i]	= GetExp(Val[i]);
			SumVal	+= DisplayVal[i];
		}
		for (i=0; i<3; i++) {
			HiResPWM(i, DisplayVal[i] * 65536UL / SumVal);
 3a2:	f6 01       	movw	r30, r12
 3a4:	81 91       	ld	r24, Z+
 3a6:	91 91       	ld	r25, Z+
 3a8:	a1 91       	ld	r26, Z+
 3aa:	b1 91       	ld	r27, Z+
 3ac:	6f 01       	movw	r12, r30
 3ae:	77 27       	eor	r23, r23
 3b0:	66 27       	eor	r22, r22
 3b2:	a3 01       	movw	r20, r6
 3b4:	92 01       	movw	r18, r4
 3b6:	0b d1       	rcall	.+534    	; 0x5ce <__udivmodsi4>
 3b8:	b9 01       	movw	r22, r18
 3ba:	81 2f       	mov	r24, r17
 3bc:	b9 d0       	rcall	.+370    	; 0x530 <HiResPWM>
			Val[i]	+= dVal[i];
			if (Val[i]<256 || Val[i]>65000) dVal[i]=-dVal[i];
			DisplayVal[i]	= GetExp(Val[i]);
			SumVal	+= DisplayVal[i];
		}
		for (i=0; i<3; i++) {
 3be:	1f 5f       	subi	r17, 0xFF	; 255
 3c0:	13 30       	cpi	r17, 0x03	; 3
 3c2:	79 f7       	brne	.-34     	; 0x3a2 <loop+0xae>
			HiResPWM(i, DisplayVal[i] * 65536UL / SumVal);
		}
		delay(150);
 3c4:	66 e9       	ldi	r22, 0x96	; 150
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	c8 d0       	rcall	.+400    	; 0x55e <delay>
	}
 3ce:	b2 cf       	rjmp	.-156    	; 0x334 <loop+0x40>

000003d0 <COM_CheckStartBit>:
{
}
 #endif

void initToneTimer(void)
{
 3d0:	c0 99       	sbic	0x18, 0	; 24
 3d2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <COM_State>
 3d6:	08 95       	ret

000003d8 <COM_Prepare>:
 3d8:	80 e8       	ldi	r24, 0x80	; 128
 3da:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <COM_Reg>
 3de:	08 95       	ret

000003e0 <COM_Next>:
 3e0:	08 95       	ret

000003e2 <COM_ShiftIn>:
 3e2:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <COM_Reg>
 3e6:	88 94       	clc
 3e8:	c0 99       	sbic	0x18, 0	; 24
 3ea:	08 94       	sec
 3ec:	87 95       	ror	r24
 3ee:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <COM_Reg>
 3f2:	08 95       	ret

000003f4 <COM_NextBit>:
 3f4:	83 e0       	ldi	r24, 0x03	; 3
 3f6:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <COM_State>
 3fa:	08 95       	ret

000003fc <COM_CheckStopBit>:
 3fc:	08 95       	ret

000003fe <__vector_5>:
 3fe:	1f 92       	push	r1
 400:	0f 92       	push	r0
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	0f 92       	push	r0
 406:	11 24       	eor	r1, r1
 408:	2f 93       	push	r18
 40a:	3f 93       	push	r19
 40c:	8f 93       	push	r24
 40e:	9f 93       	push	r25
 410:	af 93       	push	r26
 412:	bf 93       	push	r27
 414:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <millis_timer_millis>
 418:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <millis_timer_millis+0x1>
 41c:	a0 91 84 00 	lds	r26, 0x0084	; 0x800084 <millis_timer_millis+0x2>
 420:	b0 91 85 00 	lds	r27, 0x0085	; 0x800085 <millis_timer_millis+0x3>
 424:	30 91 81 00 	lds	r19, 0x0081	; 0x800081 <millis_timer_fract>
 428:	20 e2       	ldi	r18, 0x20	; 32
 42a:	23 0f       	add	r18, r19
 42c:	2d 37       	cpi	r18, 0x7D	; 125
 42e:	28 f0       	brcs	.+10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 430:	23 ea       	ldi	r18, 0xA3	; 163
 432:	23 0f       	add	r18, r19
 434:	01 96       	adiw	r24, 0x01	; 1
 436:	a1 1d       	adc	r26, r1
 438:	b1 1d       	adc	r27, r1
 43a:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <millis_timer_fract>
 43e:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <millis_timer_millis>
 442:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <millis_timer_millis+0x1>
 446:	a0 93 84 00 	sts	0x0084, r26	; 0x800084 <millis_timer_millis+0x2>
 44a:	b0 93 85 00 	sts	0x0085, r27	; 0x800085 <millis_timer_millis+0x3>
 44e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <millis_timer_overflow_count>
 452:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <millis_timer_overflow_count+0x1>
 456:	a0 91 88 00 	lds	r26, 0x0088	; 0x800088 <millis_timer_overflow_count+0x2>
 45a:	b0 91 89 00 	lds	r27, 0x0089	; 0x800089 <millis_timer_overflow_count+0x3>
 45e:	01 96       	adiw	r24, 0x01	; 1
 460:	a1 1d       	adc	r26, r1
 462:	b1 1d       	adc	r27, r1
 464:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <millis_timer_overflow_count>
 468:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <millis_timer_overflow_count+0x1>
 46c:	a0 93 88 00 	sts	0x0088, r26	; 0x800088 <millis_timer_overflow_count+0x2>
 470:	b0 93 89 00 	sts	0x0089, r27	; 0x800089 <millis_timer_overflow_count+0x3>
 474:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <PWM>
 478:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <PWM+0x1>
 47c:	20 91 7e 00 	lds	r18, 0x007E	; 0x80007e <PWM0rem.2327>
 480:	82 0f       	add	r24, r18
 482:	91 1d       	adc	r25, r1
 484:	90 95       	com	r25
 486:	99 bd       	out	0x29, r25	; 41
 488:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <PWM0rem.2327>
 48c:	bf 91       	pop	r27
 48e:	af 91       	pop	r26
 490:	9f 91       	pop	r25
 492:	8f 91       	pop	r24
 494:	3f 91       	pop	r19
 496:	2f 91       	pop	r18
 498:	0f 90       	pop	r0
 49a:	0f be       	out	0x3f, r0	; 63
 49c:	0f 90       	pop	r0
 49e:	1f 90       	pop	r1
 4a0:	18 95       	reti

000004a2 <__vector_4>:
 4a2:	1f 92       	push	r1
 4a4:	0f 92       	push	r0
 4a6:	0f b6       	in	r0, 0x3f	; 63
 4a8:	0f 92       	push	r0
 4aa:	11 24       	eor	r1, r1
 4ac:	2f 93       	push	r18
 4ae:	3f 93       	push	r19
 4b0:	4f 93       	push	r20
 4b2:	5f 93       	push	r21
 4b4:	6f 93       	push	r22
 4b6:	7f 93       	push	r23
 4b8:	8f 93       	push	r24
 4ba:	9f 93       	push	r25
 4bc:	af 93       	push	r26
 4be:	bf 93       	push	r27
 4c0:	ef 93       	push	r30
 4c2:	ff 93       	push	r31
 4c4:	ea e8       	ldi	r30, 0x8A	; 138
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	82 81       	ldd	r24, Z+2	; 0x02
 4ca:	93 81       	ldd	r25, Z+3	; 0x03
 4cc:	20 91 7d 00 	lds	r18, 0x007D	; 0x80007d <PWM1rem.2357>
 4d0:	82 0f       	add	r24, r18
 4d2:	91 1d       	adc	r25, r1
 4d4:	90 95       	com	r25
 4d6:	9e bd       	out	0x2e, r25	; 46
 4d8:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <PWM1rem.2357>
 4dc:	84 81       	ldd	r24, Z+4	; 0x04
 4de:	95 81       	ldd	r25, Z+5	; 0x05
 4e0:	20 91 7c 00 	lds	r18, 0x007C	; 0x80007c <__data_end>
 4e4:	82 0f       	add	r24, r18
 4e6:	91 1d       	adc	r25, r1
 4e8:	90 95       	com	r25
 4ea:	9b bd       	out	0x2b, r25	; 43
 4ec:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__data_end>
 4f0:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <COM_State>
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	8e 0f       	add	r24, r30
 4f8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <COM_State>
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	ee 0f       	add	r30, r30
 500:	ff 1f       	adc	r31, r31
 502:	e0 5a       	subi	r30, 0xA0	; 160
 504:	ff 4f       	sbci	r31, 0xFF	; 255
 506:	01 90       	ld	r0, Z+
 508:	f0 81       	ld	r31, Z
 50a:	e0 2d       	mov	r30, r0
 50c:	09 95       	icall
 50e:	ff 91       	pop	r31
 510:	ef 91       	pop	r30
 512:	bf 91       	pop	r27
 514:	af 91       	pop	r26
 516:	9f 91       	pop	r25
 518:	8f 91       	pop	r24
 51a:	7f 91       	pop	r23
 51c:	6f 91       	pop	r22
 51e:	5f 91       	pop	r21
 520:	4f 91       	pop	r20
 522:	3f 91       	pop	r19
 524:	2f 91       	pop	r18
 526:	0f 90       	pop	r0
 528:	0f be       	out	0x3f, r0	; 63
 52a:	0f 90       	pop	r0
 52c:	1f 90       	pop	r1
 52e:	18 95       	reti

00000530 <HiResPWM>:
 530:	f8 94       	cli
 532:	e8 2f       	mov	r30, r24
 534:	f0 e0       	ldi	r31, 0x00	; 0
 536:	ee 0f       	add	r30, r30
 538:	ff 1f       	adc	r31, r31
 53a:	e6 57       	subi	r30, 0x76	; 118
 53c:	ff 4f       	sbci	r31, 0xFF	; 255
 53e:	71 83       	std	Z+1, r23	; 0x01
 540:	60 83       	st	Z, r22
 542:	78 94       	sei
 544:	08 95       	ret

00000546 <millis>:
 546:	2f b7       	in	r18, 0x3f	; 63
 548:	f8 94       	cli
 54a:	60 91 82 00 	lds	r22, 0x0082	; 0x800082 <millis_timer_millis>
 54e:	70 91 83 00 	lds	r23, 0x0083	; 0x800083 <millis_timer_millis+0x1>
 552:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <millis_timer_millis+0x2>
 556:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <millis_timer_millis+0x3>
 55a:	2f bf       	out	0x3f, r18	; 63
 55c:	08 95       	ret

0000055e <delay>:
 55e:	cf 92       	push	r12
 560:	df 92       	push	r13
 562:	ef 92       	push	r14
 564:	ff 92       	push	r15
 566:	6b 01       	movw	r12, r22
 568:	7c 01       	movw	r14, r24
 56a:	ed df       	rcall	.-38     	; 0x546 <millis>
 56c:	c6 0e       	add	r12, r22
 56e:	d7 1e       	adc	r13, r23
 570:	e8 1e       	adc	r14, r24
 572:	f9 1e       	adc	r15, r25
 574:	e8 df       	rcall	.-48     	; 0x546 <millis>
 576:	a7 01       	movw	r20, r14
 578:	96 01       	movw	r18, r12
 57a:	26 1b       	sub	r18, r22
 57c:	37 0b       	sbc	r19, r23
 57e:	48 0b       	sbc	r20, r24
 580:	59 0b       	sbc	r21, r25
 582:	12 16       	cp	r1, r18
 584:	13 06       	cpc	r1, r19
 586:	14 06       	cpc	r1, r20
 588:	15 06       	cpc	r1, r21
 58a:	14 f4       	brge	.+4      	; 0x590 <delay+0x32>
 58c:	88 95       	sleep
 58e:	f2 cf       	rjmp	.-28     	; 0x574 <delay+0x16>
 590:	ff 90       	pop	r15
 592:	ef 90       	pop	r14
 594:	df 90       	pop	r13
 596:	cf 90       	pop	r12
 598:	08 95       	ret

0000059a <init>:
  #endif
  #endif

  // Use the Millis Timer for fast PWM (unless it doesn't have an output).
  #if (TIMER_TO_USE_FOR_MILLIS == 0) && defined(WGM01)
  sbi(TCCR0A, WGM01);
 59a:	8a b5       	in	r24, 0x2a	; 42
 59c:	82 60       	ori	r24, 0x02	; 2
 59e:	8a bd       	out	0x2a, r24	; 42
  sbi(TCCR0A, WGM00);
 5a0:	8a b5       	in	r24, 0x2a	; 42
 5a2:	81 60       	ori	r24, 0x01	; 1
 5a4:	8a bd       	out	0x2a, r24	; 42
  #endif
  
  // Millis timer is always processor clock divided by MillisTimer_Prescale_Value (64)
  #if (TIMER_TO_USE_FOR_MILLIS == 0)
   #ifdef TCCR0B
    TCCR0B = (TCCR0B & ~((1<<CS02)|(1<<CS01)|(1<<CS00))) | (MillisTimer_Prescale_Index << CS00);
 5a6:	83 b7       	in	r24, 0x33	; 51
 5a8:	88 7f       	andi	r24, 0xF8	; 248
 5aa:	82 60       	ori	r24, 0x02	; 2
 5ac:	83 bf       	out	0x33, r24	; 51
  TCCR1B = (TCCR1B & ~((1<<CS13)|(1<<CS12)|(1<<CS11)|(1<<CS10))) | (MillisTimer_Prescale_Index << CS10);
  #elif (TIMER_TO_USE_FOR_MILLIS == 1)
  TCCR1B = (TCCR1B & ~((1<<CS12)|(1<<CS11)|(1<<CS10))) | (MillisTimer_Prescale_Index << CS10);
  #endif
  // this needs to be called before setup() or some functions won't work there
  sei();
 5ae:	78 94       	sei
  
  // Enable the overlow interrupt (this is the basic system tic-toc for millis)
  #if defined(TIMSK) && defined(TOIE0) && (TIMER_TO_USE_FOR_MILLIS == 0)
  sbi(TIMSK, TOIE0);
 5b0:	89 b7       	in	r24, 0x39	; 57
 5b2:	82 60       	ori	r24, 0x02	; 2
 5b4:	89 bf       	out	0x39, r24	; 57

  // Initialize the ADC
  #if defined( INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER ) && INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER
  #if defined(ADCSRA)
    // set a2d prescale factor
	ADCSRA = (ADCSRA & ~((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0))) | (ADC_ARDUINO_PRESCALER << ADPS0) | (1<<ADEN);
 5b6:	86 b1       	in	r24, 0x06	; 6
 5b8:	88 77       	andi	r24, 0x78	; 120
 5ba:	86 68       	ori	r24, 0x86	; 134
 5bc:	86 b9       	out	0x06, r24	; 6
    // enable a2d conversions
    sbi(ADCSRA, ADEN);
 5be:	37 9a       	sbi	0x06, 7	; 6
 5c0:	08 95       	ret

000005c2 <main>:
#include <Arduino.h>

int main(void)
{
	#ifdef TUNED_OSCCAL_VALUE
	OSCCAL = TUNED_OSCCAL_VALUE; //set the oscillator calibration value based on the pins_arduino.h file. If this is not set, it will be optimised away
 5c2:	81 b7       	in	r24, 0x31	; 49
 5c4:	81 bf       	out	0x31, r24	; 49
    #endif
    init();
 5c6:	e9 df       	rcall	.-46     	; 0x59a <init>

	setup();
 5c8:	7e de       	rcall	.-772    	; 0x2c6 <setup>
    
	for (;;)
		loop();
 5ca:	94 de       	rcall	.-728    	; 0x2f4 <loop>
#include <Arduino.h>

int main(void)
 5cc:	fe cf       	rjmp	.-4      	; 0x5ca <main+0x8>

000005ce <__udivmodsi4>:
 5ce:	a1 e2       	ldi	r26, 0x21	; 33
 5d0:	1a 2e       	mov	r1, r26
 5d2:	aa 1b       	sub	r26, r26
 5d4:	bb 1b       	sub	r27, r27
 5d6:	fd 01       	movw	r30, r26
 5d8:	0d c0       	rjmp	.+26     	; 0x5f4 <__udivmodsi4_ep>

000005da <__udivmodsi4_loop>:
 5da:	aa 1f       	adc	r26, r26
 5dc:	bb 1f       	adc	r27, r27
 5de:	ee 1f       	adc	r30, r30
 5e0:	ff 1f       	adc	r31, r31
 5e2:	a2 17       	cp	r26, r18
 5e4:	b3 07       	cpc	r27, r19
 5e6:	e4 07       	cpc	r30, r20
 5e8:	f5 07       	cpc	r31, r21
 5ea:	20 f0       	brcs	.+8      	; 0x5f4 <__udivmodsi4_ep>
 5ec:	a2 1b       	sub	r26, r18
 5ee:	b3 0b       	sbc	r27, r19
 5f0:	e4 0b       	sbc	r30, r20
 5f2:	f5 0b       	sbc	r31, r21

000005f4 <__udivmodsi4_ep>:
 5f4:	66 1f       	adc	r22, r22
 5f6:	77 1f       	adc	r23, r23
 5f8:	88 1f       	adc	r24, r24
 5fa:	99 1f       	adc	r25, r25
 5fc:	1a 94       	dec	r1
 5fe:	69 f7       	brne	.-38     	; 0x5da <__udivmodsi4_loop>
 600:	60 95       	com	r22
 602:	70 95       	com	r23
 604:	80 95       	com	r24
 606:	90 95       	com	r25
 608:	9b 01       	movw	r18, r22
 60a:	ac 01       	movw	r20, r24
 60c:	bd 01       	movw	r22, r26
 60e:	cf 01       	movw	r24, r30
 610:	08 95       	ret

00000612 <__mulsidi3>:
 612:	68 94       	set
 614:	00 13       	cpse	r16, r16

00000616 <__umulsidi3>:
 616:	e8 94       	clt
 618:	a0 e0       	ldi	r26, 0x00	; 0
 61a:	b0 e0       	ldi	r27, 0x00	; 0
 61c:	e1 e1       	ldi	r30, 0x11	; 17
 61e:	f3 e0       	ldi	r31, 0x03	; 3
 620:	1d c0       	rjmp	.+58     	; 0x65c <__prologue_saves__+0x10>
 622:	ef ef       	ldi	r30, 0xFF	; 255
 624:	e7 f9       	bld	r30, 7
 626:	59 01       	movw	r10, r18
 628:	6a 01       	movw	r12, r20
 62a:	5e 23       	and	r21, r30
 62c:	55 0f       	add	r21, r21
 62e:	ee 08       	sbc	r14, r14
 630:	fe 2c       	mov	r15, r14
 632:	87 01       	movw	r16, r14
 634:	9b 01       	movw	r18, r22
 636:	ac 01       	movw	r20, r24
 638:	9e 23       	and	r25, r30
 63a:	99 0f       	add	r25, r25
 63c:	66 0b       	sbc	r22, r22
 63e:	76 2f       	mov	r23, r22
 640:	cb 01       	movw	r24, r22
 642:	3b d0       	rcall	.+118    	; 0x6ba <__muldi3>
 644:	cd b7       	in	r28, 0x3d	; 61
 646:	de b7       	in	r29, 0x3e	; 62
 648:	ea e0       	ldi	r30, 0x0A	; 10
 64a:	24 c0       	rjmp	.+72     	; 0x694 <__epilogue_restores__+0x10>

0000064c <__prologue_saves__>:
 64c:	2f 92       	push	r2
 64e:	3f 92       	push	r3
 650:	4f 92       	push	r4
 652:	5f 92       	push	r5
 654:	6f 92       	push	r6
 656:	7f 92       	push	r7
 658:	8f 92       	push	r8
 65a:	9f 92       	push	r9
 65c:	af 92       	push	r10
 65e:	bf 92       	push	r11
 660:	cf 92       	push	r12
 662:	df 92       	push	r13
 664:	ef 92       	push	r14
 666:	ff 92       	push	r15
 668:	0f 93       	push	r16
 66a:	1f 93       	push	r17
 66c:	cf 93       	push	r28
 66e:	df 93       	push	r29
 670:	cd b7       	in	r28, 0x3d	; 61
 672:	de b7       	in	r29, 0x3e	; 62
 674:	ca 1b       	sub	r28, r26
 676:	db 0b       	sbc	r29, r27
 678:	0f b6       	in	r0, 0x3f	; 63
 67a:	f8 94       	cli
 67c:	de bf       	out	0x3e, r29	; 62
 67e:	0f be       	out	0x3f, r0	; 63
 680:	cd bf       	out	0x3d, r28	; 61
 682:	09 94       	ijmp

00000684 <__epilogue_restores__>:
 684:	2a 88       	ldd	r2, Y+18	; 0x12
 686:	39 88       	ldd	r3, Y+17	; 0x11
 688:	48 88       	ldd	r4, Y+16	; 0x10
 68a:	5f 84       	ldd	r5, Y+15	; 0x0f
 68c:	6e 84       	ldd	r6, Y+14	; 0x0e
 68e:	7d 84       	ldd	r7, Y+13	; 0x0d
 690:	8c 84       	ldd	r8, Y+12	; 0x0c
 692:	9b 84       	ldd	r9, Y+11	; 0x0b
 694:	aa 84       	ldd	r10, Y+10	; 0x0a
 696:	b9 84       	ldd	r11, Y+9	; 0x09
 698:	c8 84       	ldd	r12, Y+8	; 0x08
 69a:	df 80       	ldd	r13, Y+7	; 0x07
 69c:	ee 80       	ldd	r14, Y+6	; 0x06
 69e:	fd 80       	ldd	r15, Y+5	; 0x05
 6a0:	0c 81       	ldd	r16, Y+4	; 0x04
 6a2:	1b 81       	ldd	r17, Y+3	; 0x03
 6a4:	aa 81       	ldd	r26, Y+2	; 0x02
 6a6:	b9 81       	ldd	r27, Y+1	; 0x01
 6a8:	ce 0f       	add	r28, r30
 6aa:	d1 1d       	adc	r29, r1
 6ac:	0f b6       	in	r0, 0x3f	; 63
 6ae:	f8 94       	cli
 6b0:	de bf       	out	0x3e, r29	; 62
 6b2:	0f be       	out	0x3f, r0	; 63
 6b4:	cd bf       	out	0x3d, r28	; 61
 6b6:	ed 01       	movw	r28, r26
 6b8:	08 95       	ret

000006ba <__muldi3>:
 6ba:	df 93       	push	r29
 6bc:	cf 93       	push	r28
 6be:	9f 92       	push	r9
 6c0:	a0 e4       	ldi	r26, 0x40	; 64
 6c2:	9a 2e       	mov	r9, r26
 6c4:	00 24       	eor	r0, r0
 6c6:	d0 01       	movw	r26, r0
 6c8:	e0 01       	movw	r28, r0
 6ca:	f0 01       	movw	r30, r0
 6cc:	16 95       	lsr	r17
 6ce:	07 95       	ror	r16
 6d0:	f7 94       	ror	r15
 6d2:	e7 94       	ror	r14
 6d4:	d7 94       	ror	r13
 6d6:	c7 94       	ror	r12
 6d8:	b7 94       	ror	r11
 6da:	a7 94       	ror	r10
 6dc:	48 f4       	brcc	.+18     	; 0x6f0 <__muldi3+0x36>
 6de:	10 68       	ori	r17, 0x80	; 128
 6e0:	a2 0f       	add	r26, r18
 6e2:	b3 1f       	adc	r27, r19
 6e4:	c4 1f       	adc	r28, r20
 6e6:	d5 1f       	adc	r29, r21
 6e8:	e6 1f       	adc	r30, r22
 6ea:	f7 1f       	adc	r31, r23
 6ec:	08 1e       	adc	r0, r24
 6ee:	19 1e       	adc	r1, r25
 6f0:	22 0f       	add	r18, r18
 6f2:	33 1f       	adc	r19, r19
 6f4:	44 1f       	adc	r20, r20
 6f6:	55 1f       	adc	r21, r21
 6f8:	66 1f       	adc	r22, r22
 6fa:	77 1f       	adc	r23, r23
 6fc:	88 1f       	adc	r24, r24
 6fe:	99 1f       	adc	r25, r25
 700:	9a 94       	dec	r9
 702:	21 f7       	brne	.-56     	; 0x6cc <__muldi3+0x12>
 704:	9d 01       	movw	r18, r26
 706:	ae 01       	movw	r20, r28
 708:	bf 01       	movw	r22, r30
 70a:	c0 01       	movw	r24, r0
 70c:	11 24       	eor	r1, r1
 70e:	9f 90       	pop	r9
 710:	cf 91       	pop	r28
 712:	df 91       	pop	r29
 714:	08 95       	ret

00000716 <_exit>:
 716:	f8 94       	cli

00000718 <__stop_program>:
 718:	ff cf       	rjmp	.-2      	; 0x718 <__stop_program>
